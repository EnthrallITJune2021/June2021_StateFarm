<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="7" total="10" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-01T01:14:38Z" name="Suite" finished-at="2021-11-01T01:15:20Z" duration-ms="41916">
    <groups>
      <group name="positive">
        <method signature="InitialQuotingHomeOwnerTest.verifyLandingPageHome(java.lang.String, int)[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@448ff1a8]" name="verifyLandingPageHome" class="com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest"/>
      </group> <!-- positive -->
      <group name="home">
        <method signature="InitialQuotingHomeOwnerTest.verifyLandingPageHome(java.lang.String, int)[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@448ff1a8]" name="verifyLandingPageHome" class="com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest"/>
      </group> <!-- home -->
    </groups>
    <test started-at="2021-11-01T01:14:38Z" name="TestHome" finished-at="2021-11-01T01:15:20Z" duration-ms="41916">
      <class name="com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest">
        <test-method is-config="true" signature="setUpDriver()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@448ff1a8]" started-at="2021-11-01T01:14:38Z" name="setUpDriver" finished-at="2021-11-01T01:14:43Z" duration-ms="4869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDriver -->
        <test-method is-config="true" signature="initializationOfPages()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@448ff1a8]" started-at="2021-11-01T01:14:43Z" name="initializationOfPages" finished-at="2021-11-01T01:14:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializationOfPages -->
        <test-method signature="verifyLandingPageHome(java.lang.String, int)[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@448ff1a8]" started-at="2021-11-01T01:14:43Z" name="verifyLandingPageHome" finished-at="2021-11-01T01:14:43Z" duration-ms="479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Homeowners]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11417]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLandingPageHome -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@448ff1a8]" started-at="2021-11-01T01:14:43Z" name="tearDown" finished-at="2021-11-01T01:14:43Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest -->
      <class name="com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest">
        <test-method is-config="true" signature="setUpDriver()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@1a38c59b]" started-at="2021-11-01T01:14:43Z" name="setUpDriver" finished-at="2021-11-01T01:14:49Z" duration-ms="6054" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDriver -->
        <test-method is-config="true" signature="pageInitialization()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@1a38c59b]" started-at="2021-11-01T01:14:49Z" name="pageInitialization" finished-at="2021-11-01T01:14:49Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageInitialization -->
        <test-method signature="verifyStepsForExistingCustomerAutoValidCred(java.lang.String)[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@1a38c59b]" started-at="2021-11-01T01:14:49Z" name="verifyStepsForExistingCustomerAutoValidCred" depends-on-groups="auto, positive" finished-at="2021-11-01T01:15:20Z" duration-ms="30500" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Homeowners]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#btnExisting"}
  (Session info: chrome=95.0.4638.69)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'NAS', ip: '192.168.1.168', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: C:\Users\mdnas\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:1118}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 417a25db4170877ba614fba84277bdcd
*** Element info: {Using=id, value=btnExisting}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#btnExisting"}
  (Session info: chrome=95.0.4638.69)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'NAS', ip: '192.168.1.168', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 95.0.4638.69, chrome: {chromedriverVersion: 94.0.4606.61 (418b78f5838ed..., userDataDir: C:\Users\mdnas\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:1118}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 417a25db4170877ba614fba84277bdcd
*** Element info: {Using=id, value=btnExisting}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy10.click(Unknown Source)
at com.statefarm.qa.common.CommonMethods.click(CommonMethods.java:36)
at com.statefarm.qa.autoPages.Step1Page.step1PageExistingCustomerSteps(Step1Page.java:67)
at com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest.verifyStepsForExistingCustomerAutoValidCred(InitialQuotingAutoTest.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStepsForExistingCustomerAutoValidCred -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@1a38c59b]" started-at="2021-11-01T01:15:20Z" name="tearDown" finished-at="2021-11-01T01:15:20Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest -->
    </test> <!-- TestHome -->
  </suite> <!-- Suite -->
  <suite started-at="2021-11-01T01:14:25Z" name="testRunnerAuto" finished-at="2021-11-01T01:14:38Z" duration-ms="12998">
    <groups>
    </groups>
    <test started-at="2021-11-01T01:14:25Z" name="Test" finished-at="2021-11-01T01:14:38Z" duration-ms="12998">
      <class name="com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest">
        <test-method is-config="true" signature="setUpDriver()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@3f200884]" started-at="2021-11-01T01:14:25Z" name="setUpDriver" finished-at="2021-11-01T01:14:30Z" duration-ms="5486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDriver -->
        <test-method is-config="true" signature="pageInitialization()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@3f200884]" started-at="2021-11-01T01:14:30Z" name="pageInitialization" finished-at="2021-11-01T01:14:30Z" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageInitialization -->
        <test-method signature="verifyStepsForExistingCustomerAutoValidCred(java.lang.String)[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@3f200884]" started-at="2021-11-01T01:14:30Z" name="verifyStepsForExistingCustomerAutoValidCred" depends-on-groups="auto, positive" finished-at="2021-11-01T01:14:38Z" duration-ms="7435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Auto]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStepsForExistingCustomerAutoValidCred -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@3f200884]" started-at="2021-11-01T01:14:38Z" name="tearDown" finished-at="2021-11-01T01:14:38Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest -->
    </test> <!-- Test -->
  </suite> <!-- testRunnerAuto -->
</testng-results>
