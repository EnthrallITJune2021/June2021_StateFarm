<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" total="4" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="23125" started-at="2021-10-25T01:54:31Z" finished-at="2021-10-25T01:54:54Z">
    <groups>
      <group name="positive">
        <method signature="InitialQuotingHomeOwnerTest.verifyLandingPageHome(java.lang.String, int)[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@ae45eb6]" name="verifyLandingPageHome" class="com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest"/>
      </group> <!-- positive -->
      <group name="home">
        <method signature="InitialQuotingHomeOwnerTest.verifyLandingPageHome(java.lang.String, int)[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@ae45eb6]" name="verifyLandingPageHome" class="com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest"/>
      </group> <!-- home -->
    </groups>
    <test name="TestHome" duration-ms="23125" started-at="2021-10-25T01:54:31Z" finished-at="2021-10-25T01:54:54Z">
      <class name="com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest">
        <test-method status="PASS" signature="setUpDriver()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@ae45eb6]" name="setUpDriver" is-config="true" duration-ms="4586" started-at="2021-10-25T01:54:31Z" finished-at="2021-10-25T01:54:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDriver -->
        <test-method status="PASS" signature="initializationOfPages()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@ae45eb6]" name="initializationOfPages" is-config="true" duration-ms="33" started-at="2021-10-25T01:54:35Z" finished-at="2021-10-25T01:54:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializationOfPages -->
        <test-method status="PASS" signature="verifyLandingPageHome(java.lang.String, int)[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@ae45eb6]" name="verifyLandingPageHome" duration-ms="481" started-at="2021-10-25T01:54:35Z" finished-at="2021-10-25T01:54:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Homeowners]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11417]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLandingPageHome -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest@ae45eb6]" name="tearDown" is-config="true" duration-ms="737" started-at="2021-10-25T01:54:36Z" finished-at="2021-10-25T01:54:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.statefarm.qa.test.insurance.auto.InitialQuotingHomeOwnerTest -->
      <class name="com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest">
        <test-method status="PASS" signature="setUpDriver()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@59f99ea]" name="setUpDriver" is-config="true" duration-ms="3555" started-at="2021-10-25T01:54:37Z" finished-at="2021-10-25T01:54:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpDriver -->
        <test-method status="PASS" signature="pageInitialization()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@59f99ea]" name="pageInitialization" is-config="true" duration-ms="7" started-at="2021-10-25T01:54:40Z" finished-at="2021-10-25T01:54:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pageInitialization -->
        <test-method status="FAIL" signature="verifyStepsForExistingCustomerAutoValidCred(java.lang.String)[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@59f99ea]" name="verifyStepsForExistingCustomerAutoValidCred" duration-ms="13096" depends-on-groups="auto, positive" started-at="2021-10-25T01:54:40Z" finished-at="2021-10-25T01:54:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Homeowners]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate an element using id=btnExisting
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'NAS', ip: '192.168.1.168', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate an element using id=btnExisting
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'NAS', ip: '192.168.1.168', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_181'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:327)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy10.click(Unknown Source)
at com.statefarm.qa.common.CommonMethods.click(CommonMethods.java:36)
at com.statefarm.qa.autoPages.Step1Page.step1PageExistingCustomerSteps(Step1Page.java:67)
at com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest.verifyStepsForExistingCustomerAutoValidCred(InitialQuotingAutoTest.java:44)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyStepsForExistingCustomerAutoValidCred -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest@59f99ea]" name="tearDown" is-config="true" duration-ms="597" started-at="2021-10-25T01:54:53Z" finished-at="2021-10-25T01:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.statefarm.qa.test.insurance.auto.InitialQuotingAutoTest -->
    </test> <!-- TestHome -->
  </suite> <!-- Suite -->
</testng-results>
